#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Find machine by simple input
#
import os,sys

__author__  = 'sunshengxiang'
__version__ = '1.9.2'
# 1.9 remove lib.statistic

if hasattr(sys, 'frozen'):
    __file__ = sys.executable

__dir__ = os.path.dirname(os.path.abspath(__file__))

_conf = os.path.join(__dir__, '../etc/go.conf')

def search(string, patten, a = 0, b = 0, f = 0):
    ''' 
    AUTHOR(ssx): add comment on 2012-12-21
    string is like(bb-testing-oped2012.vm)
    patten is like(bb2012)
    a is index of string, b is indes of patten
    f(flag), 1 when A[a-1] and B[b-1] are matched
    return (string, rank), the high rank the better
    '''
    if a >= len(string): return '', 0
    if b >= len(patten): return '', 0
    
    stra, ra = search(string, patten, a+1, b, 0)

    if string[a] == patten[b]:
        strb, rb = search(string, patten, a+1, b+1, 1)
        strb = string[a] + strb
        if   len(strb) > len(stra):
            return strb, rb+f
        elif len(strb) == len(stra):
            if rb+f > ra:
                return strb, rb+f
    return stra, ra

def print_and_exit(msg, exitcode = 1):
    print msg
    sys.exit(exitcode)
    
if __name__ == "__main__":
    if len(sys.argv) == 1:
        print_and_exit('need one argument')

    patten = sys.argv[1]
    if len(sys.argv) == 3: input = open(sys.argv[2])
    else:   input = sys.stdin

    wishlist = []  
    for hostname in input:
        if not hostname: continue
        hostname = hostname.strip()
        str, rank = search(hostname, patten)
        if str == patten: wishlist.append((rank, hostname))
    wishlist.sort() 
    wishlist.reverse()
#    print wishlist

    # h: host, rk: rank, up: userpass
    result =  [ '%s' %(host) \
            for rank, host in wishlist[:] if rank == wishlist[0][0]]
    for hostname in {}.fromkeys(result).keys():
        print hostname

