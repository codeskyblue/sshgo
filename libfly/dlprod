#!/usr/bin/env python
# By:       Sun,Shengxiang
# Created:  2012-8-30
#
# Download product from scm.baidu.com
#
import os, sys
import getopt

__version__ = '1.4' # 2013-1-18    ignore strick checking
                    # 1.4   2013-2-25   ver.replace('-', '.')

password    = 'getprod' 
prefix      = "getprod@product.scm.baidu.com:/data/prod-64"
_symlink = ""

def dlpath(path, version):
    basename = os.path.basename(path)
    return 'getprod@product.scm.baidu.com:/data/prod-64/%s/%s_%s_PD_BL/output' \
            %(path, basename, version.replace('.', '-'))

def dlpath2(path, version):
    basename = os.path.basename(path)
    return 'getprod@product.scm.baidu.com:/data/prod-unit/prod-64/%s/%s_%s_PD_BL/product/output' \
            %(path, basename, version.replace('.', '-'))

def usage_and_exit(exitcode = 0):
        print '''
Version: %s
Usage: dlprod  <modole_path> <version>'
Example:    
       dlprod [-s gingko ] op/oped/noah/tools/gingko 2.0.7.0
		''' %(__version__)
        sys.exit(exitcode)


if __name__ == "__main__":
    try:
        opts, args = getopt.getopt(sys.argv[1:], 's:')
        if len(args) != 2:
            usage_and_exit(1)

        for k, v in opts:
            if k == '-s':
                _symlink = v

        _modpath, _ver = args
    except getopt.GetoptError, e:
        usage_and_exit(1)

    prodname = os.path.basename(_modpath)
    _ver = _ver.replace('-', '.')
    savename = '%s-%s' %(prodname, _ver)
    print 'dlprod:', savename
    os.system("/bin/rm -fr %s" % savename)
    ret = os.system("sshpass -p '%s' scp -o StrictHostKeyChecking=no -r %s %s &>/dev/null" 
        % (password, dlpath(_modpath, _ver), savename))
    if ret != 0:
        print >>sys.stderr, 'change to product version'
        ret = os.system("sshpass -p '%s' scp -o StrictHostKeyChecking=no -r %s %s &>/dev/null" % (password, dlpath2(_modpath, _ver), savename))
        if ret != 0:
            print >> sys.stderr, 'download fail, check version number: %s' % _ver
            sys.exit(1)

    if _symlink:
        print >> sys.stderr, 'make symlink', _symlink
        os.system("/bin/rm -f {1}; ln -s {0} {1}".format(savename, _symlink))

